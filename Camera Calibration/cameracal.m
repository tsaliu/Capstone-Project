
% Define images to process
imageFileNames = {...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\1.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\2.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\3.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\5.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\6.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\9.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\10.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\11.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\12.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\16.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\19.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\20.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\21.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\23.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\25.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\29.jpg',...
    'C:\Tony\Data\U of O\Electrical Engineering\2016-2017winter\ELG4913\Matlab\Pic\30.jpg',...
    };

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Generate world coordinates of the corners of the squares
squareSize = 1.964000e+01;  % in units of 'mm'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
cameraParams = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'mm');

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams, 'BarGraph');

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% For example, you can use the calibration data to remove effects of lens distortion.
originalImage = imread(imageFileNames{1});
undistortedImage = undistortImage(originalImage, cameraParams);
